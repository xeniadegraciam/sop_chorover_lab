"3" = "lightblue",
"4" = "lavender",
"5" = "lightpink",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Render the interactive table with color formatting
datatable(
analyte_table,
options = list(
pageLength = 30,
autoWidth = TRUE,
columnDefs = list(
list(width = '50px', targets = 0),  # Section column
list(width = '150px', targets = 1), # Standard column
list(width = '80px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Section',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors)
)
# Install if needed:
# install.packages("DT")
library(DT)
# ✅ Fully aligned data frame (68 rows total)
analyte_table <- data.frame(
Group = c(
rep(1, 4),
rep(2, 6),
rep(3, 13),
rep(4, 16),
rep(5, 9),
rep(6, 8),
rep(7, 11),
8
),
Group_Name = c(
rep("Major Cations", 4),
rep("DRC", 6),
rep("Trace Metals", 13),
rep("REY", 16),
rep("Minor/HNO3", 9),
rep("Minor/HCl", 8),
rep("Minor/HF", 11),
"Hg"
),
Element = c(
# Section 1 (4)
c("K", "Ca", "Na", "Mg"),
# Section 2 (6)
c("V", "Cr", "Fe", "Co", "As", "Se"),
# Section 3 (13)
c("Be", "Al", "Mn", "Ni", "Cu", "Zn", "Mo", "Ag", "Cd", "Sn", "Sb", "Ba", "Pb"),
# Section 4 (16)
c("Y", "Ce", "Dy", "Er", "Eu", "Gd", "Ho", "La", "Lu", "Nd", "Pr", "Sm", "Tb", "Th", "Tm", "Yb"),
# Section 5 (9)
c("Li", "Ga", "Rb", "Sr", "In", "Cs", "Tl", "Bi", "U"),
# Section 6 (8)
c("Ru", "Rh", "Pd", "Te", "Hf", "Ir", "Pt", "Au"),
# Section 7 (11)
c("B", "Si", "P", "Ti", "Ge", "Zr", "Nb", "Ta", "W", "Re", "Total S"),
# Section 8 (1)
"Hg"
)
)
# Set up the color palette for Sections 1–8 (light rainbow colors)
section_colors <- c(
"1" = "lightgreen",
"2" = "lightyellow",
"3" = "lightblue",
"4" = "lavender",
"5" = "lightpink",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Render the interactive table with color formatting
datatable(
analyte_table,
options = list(
pageLength = 30,
autoWidth = TRUE,
columnDefs = list(
list(width = '50px', targets = 0),  # Section column
list(width = '150px', targets = 1), # Standard column
list(width = '80px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors)
)
# Install if needed:
# install.packages("DT")
library(DT)
# ✅ Fully aligned data frame (68 rows total)
analyte_table <- data.frame(
Group = c(
rep(1, 4),
rep(2, 6),
rep(3, 13),
rep(4, 16),
rep(5, 9),
rep(6, 8),
rep(7, 11),
8
),
Group_Name = c(
rep("Major Cations", 4),
rep("DRC", 6),
rep("Trace Metals", 13),
rep("REY", 16),
rep("Minor/HNO3", 9),
rep("Minor/HCl", 8),
rep("Minor/HF", 11),
"Hg"
),
Element = c(
# Section 1 (4)
c("K", "Ca", "Na", "Mg"),
# Section 2 (6)
c("V", "Cr", "Fe", "Co", "As", "Se"),
# Section 3 (13)
c("Be", "Al", "Mn", "Ni", "Cu", "Zn", "Mo", "Ag", "Cd", "Sn", "Sb", "Ba", "Pb"),
# Section 4 (16)
c("Y", "Ce", "Dy", "Er", "Eu", "Gd", "Ho", "La", "Lu", "Nd", "Pr", "Sm", "Tb", "Th", "Tm", "Yb"),
# Section 5 (9)
c("Li", "Ga", "Rb", "Sr", "In", "Cs", "Tl", "Bi", "U"),
# Section 6 (8)
c("Ru", "Rh", "Pd", "Te", "Hf", "Ir", "Pt", "Au"),
# Section 7 (11)
c("B", "Si", "P", "Ti", "Ge", "Zr", "Nb", "Ta", "W", "Re", "Total S"),
# Section 8 (1)
"Hg"
)
)
# Set up the color palette for Sections 1–8 (light rainbow colors)
section_colors <- c(
"1" = "lightgreen",
"2" = "lightyellow",
"3" = "lightblue",
"4" = "lavender",
"5" = "lightpink",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Max section size (for page length)
max_section_size <- max(table(analyte_table$Group))
# Render the interactive table with color formatting
datatable(
analyte_table,
options = list(
pageLength = max_section_size,  # dynamically show up to 16 rows per page
autoWidth = TRUE,
columnDefs = list(
list(width = '50px', targets = 0),  # Section column
list(width = '150px', targets = 1), # Standard column
list(width = '80px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors),
color = styleEqual(names(section_colors), rep("black", length(section_colors)))  # force dark text
)
# Install if needed:
# install.packages("DT")
library(DT)
# ✅ Fully aligned data frame (68 rows total)
analyte_table <- data.frame(
Group = c(
rep(1, 4),
rep(2, 6),
rep(3, 13),
rep(4, 16),
rep(5, 9),
rep(6, 8),
rep(7, 11),
8
),
Group_Name = c(
rep("Major Cations", 4),
rep("DRC", 6),
rep("Trace Metals", 13),
rep("REY", 16),
rep("Minor/HNO3", 9),
rep("Minor/HCl", 8),
rep("Minor/HF", 11),
"Hg"
),
Element = c(
# Section 1 (4)
c("K", "Ca", "Na", "Mg"),
# Section 2 (6)
c("V", "Cr", "Fe", "Co", "As", "Se"),
# Section 3 (13)
c("Be", "Al", "Mn", "Ni", "Cu", "Zn", "Mo", "Ag", "Cd", "Sn", "Sb", "Ba", "Pb"),
# Section 4 (16)
c("Y", "Ce", "Dy", "Er", "Eu", "Gd", "Ho", "La", "Lu", "Nd", "Pr", "Sm", "Tb", "Th", "Tm", "Yb"),
# Section 5 (9)
c("Li", "Ga", "Rb", "Sr", "In", "Cs", "Tl", "Bi", "U"),
# Section 6 (8)
c("Ru", "Rh", "Pd", "Te", "Hf", "Ir", "Pt", "Au"),
# Section 7 (11)
c("B", "Si", "P", "Ti", "Ge", "Zr", "Nb", "Ta", "W", "Re", "Total S"),
# Section 8 (1)
"Hg"
)
)
# Set up the color palette for Sections 1–8 (light rainbow colors)
section_colors <- c(
"1" = "lightgreen",
"2" = "lightyellow",
"3" = "lightblue",
"4" = "lavender",
"5" = "lightpink",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Max section size (for page length)
max_section_size <- 25
# Render the interactive table with color formatting
datatable(
analyte_table,
options = list(
pageLength = max_section_size,  # dynamically show up to 16 rows per page
autoWidth = TRUE,
columnDefs = list(
list(width = '50px', targets = 0),  # Section column
list(width = '150px', targets = 1), # Standard column
list(width = '80px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors),
color = styleEqual(names(section_colors), rep("black", length(section_colors)))  # force dark text
)
# Install if needed:
# install.packages("DT")
library(DT)
# ✅ Fully aligned data frame (68 rows total)
analyte_table <- data.frame(
Group = c(
rep(1, 4),
rep(2, 6),
rep(3, 13),
rep(4, 16),
rep(5, 9),
rep(6, 8),
rep(7, 11),
8
),
Group_Name = c(
rep("Major Cations", 4),
rep("DRC", 6),
rep("Trace Metals", 13),
rep("REY", 16),
rep("Minor/HNO3", 9),
rep("Minor/HCl", 8),
rep("Minor/HF", 11),
"Hg"
),
Element = c(
# Section 1 (4)
c("K", "Ca", "Na", "Mg"),
# Section 2 (6)
c("V", "Cr", "Fe", "Co", "As", "Se"),
# Section 3 (13)
c("Be", "Al", "Mn", "Ni", "Cu", "Zn", "Mo", "Ag", "Cd", "Sn", "Sb", "Ba", "Pb"),
# Section 4 (16)
c("Y", "Ce", "Dy", "Er", "Eu", "Gd", "Ho", "La", "Lu", "Nd", "Pr", "Sm", "Tb", "Th", "Tm", "Yb"),
# Section 5 (9)
c("Li", "Ga", "Rb", "Sr", "In", "Cs", "Tl", "Bi", "U"),
# Section 6 (8)
c("Ru", "Rh", "Pd", "Te", "Hf", "Ir", "Pt", "Au"),
# Section 7 (11)
c("B", "Si", "P", "Ti", "Ge", "Zr", "Nb", "Ta", "W", "Re", "Total S"),
# Section 8 (1)
"Hg"
)
)
# Set up the color palette for Sections 1–8 (light rainbow colors)
section_colors <- c(
"1" = "lightpink",      # pink (favorite)
"2" = "thistle",       # purple (favorite)
"3" = "mediumaquamarine",
"4" = "khaki",
"5" = "lightblue",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Max section size (for page length)
max_section_size <- max(table(analyte_table$Group))
# Render the interactive table with color formatting
datatable(
analyte_table,
options = list(
pageLength = max_section_size,  # dynamically show up to 16 rows per page
autoWidth = TRUE,
columnDefs = list(
list(width = '50px', targets = 0),  # Section column
list(width = '150px', targets = 1), # Standard column
list(width = '80px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors),
color = styleEqual(names(section_colors), rep("black", length(section_colors)))  # force dark text
)
datatable(
analyte_table,
extensions = 'Buttons',
options = list(
pageLength = 10,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')
)
) %>%
formatStyle(
'Section',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors)
)
datatable(
analyte_table,
extensions = 'Buttons',
options = list(
pageLength = 10,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors)
)
# Install if needed:
# install.packages("DT")
library(DT)
# ✅ Fully aligned data frame (68 rows total)
analyte_table <- data.frame(
Group = c(
rep(1, 4),
rep(2, 6),
rep(3, 13),
rep(4, 16),
rep(5, 9),
rep(6, 8),
rep(7, 11),
8
),
Group_Name = c(
rep("Major Cations", 4),
rep("DRC", 6),
rep("Trace Metals", 13),
rep("REY", 16),
rep("Minor/HNO3", 9),
rep("Minor/HCl", 8),
rep("Minor/HF", 11),
"Hg"
),
Element = c(
# Section 1 (4)
c("K", "Ca", "Na", "Mg"),
# Section 2 (6)
c("V", "Cr", "Fe", "Co", "As", "Se"),
# Section 3 (13)
c("Be", "Al", "Mn", "Ni", "Cu", "Zn", "Mo", "Ag", "Cd", "Sn", "Sb", "Ba", "Pb"),
# Section 4 (16)
c("Y", "Ce", "Dy", "Er", "Eu", "Gd", "Ho", "La", "Lu", "Nd", "Pr", "Sm", "Tb", "Th", "Tm", "Yb"),
# Section 5 (9)
c("Li", "Ga", "Rb", "Sr", "In", "Cs", "Tl", "Bi", "U"),
# Section 6 (8)
c("Ru", "Rh", "Pd", "Te", "Hf", "Ir", "Pt", "Au"),
# Section 7 (11)
c("B", "Si", "P", "Ti", "Ge", "Zr", "Nb", "Ta", "W", "Re", "Total S"),
# Section 8 (1)
"Hg"
)
)
# Set up the color palette for Sections 1–8 (light rainbow colors)
section_colors <- c(
"1" = "lightpink",      # pink (favorite)
"2" = "thistle",       # purple (favorite)
"3" = "mediumaquamarine",
"4" = "khaki",
"5" = "lightblue",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Max section size (for page length)
max_section_size <- max(table(analyte_table$Group))
# Render the interactive table with color formatting
datatable(
analyte_table,
extensions = 'Buttons',
options = list(
pageLength = max_section_size,  # dynamically show up to 16 rows per page
autoWidth = TRUE,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
columnDefs = list(
list(width = '50px', targets = 0),  # Section column
list(width = '150px', targets = 1), # Standard column
list(width = '80px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors),
color = styleEqual(names(section_colors), rep("black", length(section_colors)))  # force dark text
)
# Install if needed:
# install.packages("DT")
library(DT)
# ✅ Fully aligned data frame (68 rows total)
analyte_table <- data.frame(
Group = c(
rep(1, 4),
rep(2, 6),
rep(3, 13),
rep(4, 16),
rep(5, 9),
rep(6, 8),
rep(7, 11),
8
),
Group_Name = c(
rep("Major Cations", 4),
rep("DRC", 6),
rep("Trace Metals", 13),
rep("REY", 16),
rep("Minor/HNO3", 9),
rep("Minor/HCl", 8),
rep("Minor/HF", 11),
"Hg"
),
Element = c(
# Section 1 (4)
c("K", "Ca", "Na", "Mg"),
# Section 2 (6)
c("V", "Cr", "Fe", "Co", "As", "Se"),
# Section 3 (13)
c("Be", "Al", "Mn", "Ni", "Cu", "Zn", "Mo", "Ag", "Cd", "Sn", "Sb", "Ba", "Pb"),
# Section 4 (16)
c("Y", "Ce", "Dy", "Er", "Eu", "Gd", "Ho", "La", "Lu", "Nd", "Pr", "Sm", "Tb", "Th", "Tm", "Yb"),
# Section 5 (9)
c("Li", "Ga", "Rb", "Sr", "In", "Cs", "Tl", "Bi", "U"),
# Section 6 (8)
c("Ru", "Rh", "Pd", "Te", "Hf", "Ir", "Pt", "Au"),
# Section 7 (11)
c("B", "Si", "P", "Ti", "Ge", "Zr", "Nb", "Ta", "W", "Re", "Total S"),
# Section 8 (1)
"Hg"
)
)
# Set up the color palette for Sections 1–8 (light rainbow colors)
section_colors <- c(
"1" = "lightpink",      # pink (favorite)
"2" = "thistle",       # purple (favorite)
"3" = "mediumaquamarine",
"4" = "khaki",
"5" = "lightblue",
"6" = "lightsalmon",
"7" = "lightcyan",
"8" = "lightgray"
)
# Max section size (for page length)
max_section_size <- max(table(analyte_table$Group))
# Render the interactive table with color formatting
datatable(
analyte_table,
extensions = 'Buttons',
options = list(
pageLength = max_section_size,  # dynamically show up to 16 rows per page
autoWidth = TRUE,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
columnDefs = list(
list(width = '50px', targets = 0),  # Group column
list(width = '150px', targets = 1), # Group_Name column
list(width = '50px', targets = 2)   # Element column
)
)
) %>%
formatStyle(
'Group',
target = 'row',
backgroundColor = styleEqual(names(section_colors), section_colors),
color = styleEqual(names(section_colors), rep("black", length(section_colors)))  # force dark text
)
